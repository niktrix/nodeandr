{
  "_args": [
    [
      {
        "raw": "p-any@^1.1.0",
        "scope": null,
        "escapedName": "p-any",
        "name": "p-any",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "D:\\samsungwp\\src\\github-lvs.corpzone.internalzone.com\\misp\\alexa\\node_modules\\is-reachable"
    ]
  ],
  "_from": "p-any@>=1.1.0 <2.0.0",
  "_id": "p-any@1.1.0",
  "_inCache": true,
  "_location": "/p-any",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/p-any-1.1.0.tgz_1497313357479_0.6320313415490091"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-any@^1.1.0",
    "scope": null,
    "escapedName": "p-any",
    "name": "p-any",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/is-reachable"
  ],
  "_resolved": "https://registry.npmjs.org/p-any/-/p-any-1.1.0.tgz",
  "_shasum": "1d03835c7eed1e34b8e539c47b7b60d0d015d4e1",
  "_shrinkwrap": null,
  "_spec": "p-any@^1.1.0",
  "_where": "D:\\samsungwp\\src\\github-lvs.corpzone.internalzone.com\\misp\\alexa\\node_modules\\is-reachable",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-any/issues"
  },
  "dependencies": {
    "p-some": "^2.0.0"
  },
  "description": "Wait for any promise to be fulfilled",
  "devDependencies": {
    "ava": "*",
    "delay": "^2.0.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Ef0tVa4CZ5pTAmKn+Cg3w8ABBXh+hHO1aV8281dKOoUHfX+3tjG2EaFcC+aZyagg9b4EYGsHEjz21DnEE8Og2g==",
    "shasum": "1d03835c7eed1e34b8e539c47b7b60d0d015d4e1",
    "tarball": "https://registry.npmjs.org/p-any/-/p-any-1.1.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "a3c40833ea2c2ea671709ebb9bab9674c5e60b7a",
  "homepage": "https://github.com/sindresorhus/p-any#readme",
  "keywords": [
    "promise",
    "any",
    "resolved",
    "wait",
    "collection",
    "iterable",
    "iterator",
    "race",
    "fulfilled",
    "fastest",
    "one",
    "single",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-any",
  "optionalDependencies": {},
  "readme": "# p-any [![Build Status](https://travis-ci.org/sindresorhus/p-any.svg?branch=master)](https://travis-ci.org/sindresorhus/p-any)\n\n> Wait for any promise to be fulfilled\n\nUseful when you need the fastest promise.\n\nYou probably want this instead of `Promise.race()`. [Reason.](http://bluebirdjs.com/docs/api/promise.race.html)\n\n\n## Install\n\n```\n$ npm install p-any\n```\n\n\n## Usage\n\nChecks 3 websites and logs the fastest.\n\n```js\nconst got = require('got');\nconst pAny = require('p-any');\n\npAny([\n\tgot.head('github.com').then(() => 'github'),\n\tgot.head('google.com').then(() => 'google'),\n\tgot.head('twitter.com').then(() => 'twitter'),\n]).then(first => {\n\tconsole.log(first);\n\t//=> 'google'\n});\n```\n\n\n## API\n\n### pAny(input, [options])\n\nReturns a `Promise` that is fulfilled when any promise from `input` is fulfilled. If all the `input` promises reject, it will reject with an [`AggregateError`](https://github.com/sindresorhus/aggregate-error) error.\n\n#### input\n\nType: `Iterable<Promise|any>`\n\n#### options\n\nType: `Object`\n\n##### filter\n\nType: `Function`\n\nReceives the value resolved by the promise. Used to filter out values that doesn't satisfy a condition.\n\n### pAny.AggregateError\n\nExposed for instance checking.\n\n\n## Related\n\n- [p-some](https://github.com/sindresorhus/p-some) - Wait for a specified number of promises to be fulfilled\n- [p-locate](https://github.com/sindresorhus/p-locate) - Get the first fulfilled promise that satisfies the provided testing function\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-any.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.1.0"
}
