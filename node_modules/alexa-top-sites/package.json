{
  "_args": [
    [
      {
        "raw": "alexa-top-sites",
        "scope": null,
        "escapedName": "alexa-top-sites",
        "name": "alexa-top-sites",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\samsungwp\\src\\github-lvs.corpzone.internalzone.com\\misp\\alexa"
    ]
  ],
  "_from": "alexa-top-sites@latest",
  "_id": "alexa-top-sites@1.1.0",
  "_inCache": true,
  "_location": "/alexa-top-sites",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/alexa-top-sites-1.1.0.tgz_1473486867006_0.21213665883988142"
  },
  "_npmUser": {
    "name": "pdehaan",
    "email": "peter@deseloper.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "alexa-top-sites",
    "scope": null,
    "escapedName": "alexa-top-sites",
    "name": "alexa-top-sites",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/alexa-top-sites/-/alexa-top-sites-1.1.0.tgz",
  "_shasum": "ecacce615f8623b83ffa4d7087026e75cba551e9",
  "_shrinkwrap": null,
  "_spec": "alexa-top-sites",
  "_where": "D:\\samsungwp\\src\\github-lvs.corpzone.internalzone.com\\misp\\alexa",
  "author": {
    "name": "Peter deHaan",
    "email": "peter@deseloper.com",
    "url": "https://about.me/peterdehaan"
  },
  "bugs": {
    "url": "https://github.com/pdehaan/alexa-top-sites/issues"
  },
  "dependencies": {
    "cheerio": "^0.22.0",
    "node-fetch": "^1.6.0"
  },
  "description": "Scrape Alexa 'Top' pages for some popular sites for URL testing.",
  "devDependencies": {
    "check-url": "^1.0.0",
    "npm-run-all": "3.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ecacce615f8623b83ffa4d7087026e75cba551e9",
    "tarball": "https://registry.npmjs.org/alexa-top-sites/-/alexa-top-sites-1.1.0.tgz"
  },
  "gitHead": "92a47ba497ab26aafda339d0f9623329455c5c05",
  "homepage": "https://github.com/pdehaan/alexa-top-sites#readme",
  "keywords": [
    "fetch",
    "alexa",
    "top sites"
  ],
  "license": "WTFPL",
  "main": "index.js",
  "maintainers": [
    {
      "name": "pdehaan",
      "email": "peter@deseloper.com"
    }
  ],
  "name": "alexa-top-sites",
  "optionalDependencies": {},
  "readme": "# alexa-top-sites\n\nScrape Alexa \"Top\" pages for some popular sites for URL testing.\n\n## Why?\n\nBecause you want to test some top sites, and don't want to go through an API because you only need a few URLs.\n\n**NOTE:** At most, this API will probably only return 25 results, which seems to be the default page size of Alexa pages.\n\nI wouldn't recommend using this garbage API for anything serious (like production sites) since it could easily break if Alexa ever changes their HTML/CSS. You're much better off using their APIs directly. I quickly built this :poop: for testing.\n\n## Installation:\n\n```sh\n$ npm i alexa-top-sites -S\n```\n\n## Usage:\n\n### By Categories:\n\nNote that the category name is very case specific. You should probably browse the Alexa site and find the specific URL you want and use that: http://www.alexa.com/topsites/category/Top/Sports.\n\n```js\nconst { byCategory } = require('alexa-top-sites');\n\nbyCategory('Sports')\n  .then((res) => console.log(JSON.stringify(res, null, 2)))\n  .catch((err) => console.error(err.message));\n```\n\n<details>\n<summary>OUTPUT:</summary>\n```json\n{\n  \"category\": \"Sports\",\n  \"url\": \"http://www.alexa.com/topsites/category/Top/Sports\",\n  \"sites\": [\n    \"http://sports.yahoo.com\",\n    \"http://www.nbcolympics.com/\",\n    \"http://www.espncricinfo.com/\",\n    \"http://www.goal.com/\",\n    \"http://www.nfl.com/\",\n    \"http://www.cbssports.com/\",\n    \"http://bleacherreport.com\",\n    \"https://www.premierleague.com/\",\n    \"http://www.espn.com/\",\n    \"http://football.fantasysports.yahoo.com\",\n    \"http://www.livescore.com/\",\n    \"http://www.skysports.com/\",\n    \"http://www.cricbuzz.com/\",\n    \"http://deadspin.com\",\n    \"https://www.strava.com/\",\n    \"http://mlb.mlb.com/home\",\n    \"http://www.nbcsports.com/\",\n    \"http://www.bbc.com/sport/olympics\",\n    \"http://www.sbnation.com/\",\n    \"http://www.foxsports.com/\",\n    \"https://www.rei.com/\",\n    \"http://www.skysports.com/football\",\n    \"http://baseball.fantasysports.yahoo.com\",\n    \"http://www.flashscore.com/\",\n    \"http://www.si.com/\"\n  ]\n}\n```\n</details>\n\n### By Countries:\n\n```js\nconst { byCountry } = require('alexa-top-sites');\n\nbyCountry('CA') // Canada\n  .then((res) => console.log(JSON.stringify(res, null, 2)))\n  .catch((err) => console.error(err));\n```\n\n<details>\n<summary>Output:</summary>\n```json\n{\n  \"country\": \"CA\",\n  \"url\": \"http://www.alexa.com/topsites/countries/CA\",\n  \"sites\": [\n    \"http://google.ca\",\n    \"http://youtube.com\",\n    \"http://facebook.com\",\n    \"http://google.com\",\n    \"http://yahoo.com\",\n    \"http://live.com\",\n    \"http://msn.com\",\n    \"http://wikipedia.org\",\n    \"http://amazon.ca\",\n    \"http://kijiji.ca\",\n    \"http://bing.com\",\n    \"http://twitter.com\",\n    \"http://reddit.com\",\n    \"http://netflix.com\",\n    \"http://cbc.ca\",\n    \"http://amazon.com\",\n    \"http://linkedin.com\",\n    \"http://royalbank.com\",\n    \"http://instagram.com\",\n    \"http://diply.com\",\n    \"http://td.com\",\n    \"http://pinterest.com\",\n    \"http://imgur.com\",\n    \"http://ebay.ca\",\n    \"http://tumblr.com\"\n  ]\n}\n```\n</details>\n\n### Global:\n\n```js\nconst alexa = require('alexa-top-sites');\n\nalexa.global()\n  .then((res) => console.log(JSON.stringify(res, null, 2)))\n  .catch((err) => console.error(err));\n```\n\n<details>\n<summary>Output:</summary>\n```json\n{\n  \"url\": \"http://www.alexa.com/topsites\",\n  \"sites\": [\n    \"http://google.com\",\n    \"http://youtube.com\",\n    \"http://facebook.com\",\n    \"http://baidu.com\",\n    \"http://yahoo.com\",\n    \"http://amazon.com\",\n    \"http://wikipedia.org\",\n    \"http://qq.com\",\n    \"http://google.co.in\",\n    \"http://twitter.com\",\n    \"http://live.com\",\n    \"http://taobao.com\",\n    \"http://google.co.jp\",\n    \"http://bing.com\",\n    \"http://weibo.com\",\n    \"http://instagram.com\",\n    \"http://sina.com.cn\",\n    \"http://vk.com\",\n    \"http://yahoo.co.jp\",\n    \"http://msn.com\",\n    \"http://linkedin.com\",\n    \"http://yandex.ru\",\n    \"http://google.de\",\n    \"http://hao123.com\",\n    \"http://google.co.uk\"\n  ]\n}\n```\n</details>\n\n### Paged results:\n\nRetrieve the first X pages of results for a category or country:\n\n```js\nconst { getPages, byCategory } = require('alexa-top-sites');\n\n// Get the first 10 pages (250 results) of http://www.alexa.com/topsites/category/Top/Computers/Internet\ngetPages(byCategory, 'Computers/Internet', 10)\n  .then((res) => console.log(JSON.stringify(res, null, 2)))\n  .catch((err) => console.error(err.message));\n```\n\n<details>\n<summary>Output:</summary>\n```js\n[\n  \"http://google.com\",\n  \"https://www.youtube.com/\",\n  \"https://www.facebook.com/\",\n  \"https://mail.google.com/\",\n  \"http://yahoo.com\",\n  \"https://twitter.com/\",\n  \"http://mail.yahoo.com\",\n  \"https://www.bing.com/\",\n  \"http://search.yahoo.com\",\n  \"https://www.linkedin.com/\",\n  \"http://msn.com\",\n  \"https://www.pinterest.com/\",\n  \"http://wordpress.com\",\n  \"http://tumblr.com\",\n  \"http://imgur.com\",\n  ...\n]\n```\n</details>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pdehaan/alexa-top-sites.git"
  },
  "scripts": {
    "test": "npm-run-all test:*",
    "test:category": "node tests/category",
    "test:category2": "node tests/category-2",
    "test:country": "node tests/country",
    "test:global": "node tests/global"
  },
  "version": "1.1.0"
}
