{
  "_args": [
    [
      {
        "raw": "is-reachable",
        "scope": null,
        "escapedName": "is-reachable",
        "name": "is-reachable",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\samsungwp\\src\\github-lvs.corpzone.internalzone.com\\misp\\alexa"
    ]
  ],
  "_from": "is-reachable@latest",
  "_id": "is-reachable@2.3.3",
  "_inCache": true,
  "_location": "/is-reachable",
  "_nodeVersion": "8.1.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/is-reachable-2.3.3.tgz_1499764784609_0.13172353547997773"
  },
  "_npmUser": {
    "name": "silverwind",
    "email": "npm@silverwind.io"
  },
  "_npmVersion": "5.0.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "is-reachable",
    "scope": null,
    "escapedName": "is-reachable",
    "name": "is-reachable",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/is-reachable/-/is-reachable-2.3.3.tgz",
  "_shasum": "0a0dc4281460f85ad90169914a696433ea7372c0",
  "_shrinkwrap": null,
  "_spec": "is-reachable",
  "_where": "D:\\samsungwp\\src\\github-lvs.corpzone.internalzone.com\\misp\\alexa",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "browser": "browser.js",
  "bugs": {
    "url": "https://github.com/sindresorhus/is-reachable/issues"
  },
  "contributors": [
    {
      "name": "silverwind",
      "email": "me@silverwind.io",
      "url": "github.com/silverwind"
    }
  ],
  "dependencies": {
    "arrify": "^1.0.1",
    "got": "^7.1.0",
    "is-port-reachable": "^2.0.0",
    "p-any": "^1.1.0",
    "p-timeout": "^1.2.0",
    "pify": "^3.0.0",
    "port-numbers": "^2.0.3",
    "prepend-http": "^1.0.4",
    "router-ips": "^1.0.0",
    "url-parse": "^1.1.9"
  },
  "description": "Check if servers are reachable",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-C+bGulHckKAtG6jji9gXawYASctmcpTnQMfKR7CiTC4D4IWgilNkuHBu0QPpWHRawi0WFein9POBLduCdHSbVw==",
    "shasum": "0a0dc4281460f85ad90169914a696433ea7372c0",
    "tarball": "https://registry.npmjs.org/is-reachable/-/is-reachable-2.3.3.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js",
    "browser.js"
  ],
  "gitHead": "951d241c2e23569f5a96033c02726e59267f889c",
  "homepage": "https://github.com/sindresorhus/is-reachable#readme",
  "keywords": [
    "browser",
    "online",
    "offline",
    "network",
    "connected",
    "connectivity",
    "internet",
    "is",
    "has",
    "detect",
    "reachable",
    "reachability",
    "server",
    "host",
    "accessible",
    "socket"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "silverwind",
      "email": "me@silverwind.io"
    }
  ],
  "name": "is-reachable",
  "optionalDependencies": {},
  "readme": "# is-reachable [![Build Status](https://travis-ci.org/sindresorhus/is-reachable.svg?branch=master)](https://travis-ci.org/sindresorhus/is-reachable)\n\n> Check if servers are reachable\n\nWorks in Node.js and the browser *(with [browserify](http://browserify.org))*.\n\nThe Node.js version will do a TCP handshake with the target's port. It attempts to detect cases where a router redirects the request to itself.\n\nThe browser version is limited by the fact that browsers cannot connect to arbitrary ports. It only supports HTTP and HTTPS and the check relies on the `/favicon.ico` path being present.\n\n## Install\n\n```\n$ npm install --save is-reachable\n```\n\n\n## Usage\n\n```js\nconst isReachable = require('is-reachable');\n\nisReachable('sindresorhus.com').then(reachable => {\n\tconsole.log(reachable);\n\t//=> true\n});\n\nisReachable('google.com:80').then(reachable => {\n\tconsole.log(reachable);\n\t//=> true\n});\n```\n\n\n## API\n\n### isReachable(targets, [options])\n\nReturns a `Promise` for a `boolean` which is `true` if any of the `targets` are reachable.\n\n#### targets\n\nType: `string` `Array`\n\nOne or more targets to check. Can either be a full [URL](https://nodejs.org/api/url.html) like `https://hostname`, `hostname:port` or just `hostname`. When the protocol is missing from a target `http` is assumed.\n\n[Well-known protocols][] are supported (e.g. `ftp://`, `mysql://`, `redis://` and more).\n\n#### options\n\n##### timeout\n\nType: `number`\n\nTimeout in milliseconds after which a request is considered failed. Default: `5000.\n\n## Contributors\n\n- [silverwind](https://github.com/silverwind)\n\n\n## Related\n\n- [is-online](https://github.com/sindresorhus/is-online) - Check if the internet connection is up\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n\n[Well-known protocols]: http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/is-reachable.git"
  },
  "scripts": {
    "test": "xo && ava test.js"
  },
  "version": "2.3.3",
  "xo": {
    "esnext": true
  }
}
